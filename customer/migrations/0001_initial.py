# Generated by Django 5.2.4 on 2025-08-04 19:16

import customer.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=255)),
                ('address', models.TextField(blank=True, default='')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('sale_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sale_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('voided', 'Voided')], default='pending', max_length=20)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_sales', to='customer.customer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTransaction',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('sale payment', 'Sale Payment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('flow_direction', models.CharField(choices=[('in', 'In'), ('out', 'Out')], max_length=10)),
                ('deposit_purpose', models.CharField(blank=True, choices=[('normal deposit', 'Normal Deposit'), ('buy goods', 'Buy Goods'), ('convert to cfa', 'Convert to CFA')], max_length=20, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('transfer', 'Transfer')], max_length=20)),
                ('trxn_ref', models.CharField(default=customer.models.CustomerTransaction.generate_trxn_ref, editable=False, max_length=50, unique=True)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('voided', 'Voided')], default='completed', max_length=20)),
                ('remark', models.TextField(blank=True, default='', max_length=255)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_trxns', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_trxn', to='customer.sale')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('deposit_purpose__isnull', False), ('transaction_type', 'deposit')), models.Q(models.Q(('transaction_type', 'deposit'), _negated=True), ('deposit_purpose__isnull', True)), _connector='OR'), name='chk_deposit_purpose_logic'), models.CheckConstraint(condition=models.Q(models.Q(('sale_id__isnull', False), ('transaction_type', 'sale payment')), models.Q(models.Q(('transaction_type', 'sale payment'), _negated=True), ('sale_id__isnull', True)), _connector='OR'), name='chk_sale_payment_logic'), models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='chk_positive_amount')],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('sale_item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sold_quantity', models.IntegerField()),
                ('unit_selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled'), ('voided', 'Voided')], default='pending', max_length=20)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sale_items', to='inventory.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_item', to='customer.sale')),
                ('serial_item_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sale_items', to='inventory.serializedinventory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('sold_quantity__gt', 0), ('unit_selling_price__gt', 0)), name='chk_sales_items_positive_amount')],
            },
        ),
    ]
